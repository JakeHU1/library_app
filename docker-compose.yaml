# https://docs.docker.com/samples/django/#define-the-project-components

version: '3.9'

services:
  db:
    image: postgres
    volumes:
      - ./dev-data/db:/var/lib/postgresql/data
      # - ./dev-data/data/dummy_final.sql:/docker-entrypoint-initdb.d/dummy_dump.sql
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    # check whether the database is ready
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 10
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: Pa$$W0rd
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - '8080:80'
    restart: unless-stopped
  web:
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py createsuperuser --noinput || echo 'user exists' && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - DJANGO_SUPERUSER_USERNAME=dev-admin
      - DJANGO_SUPERUSER_EMAIL=dev-admin@hyper.com
      - DJANGO_SUPERUSER_PASSWORD=dev-admin
    # wait on the database to be ready
    depends_on:
      db:
        condition: service_healthy
volumes:
  pgadmin:
