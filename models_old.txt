# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models
from django.contrib.auth.models import User


class Author(models.Model):
    name = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'author'


class AuthorBook(models.Model):
    author = models.OneToOneField(Author, models.DO_NOTHING, primary_key=True)
    book = models.ForeignKey('Book', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'author_book'
        unique_together = (('author', 'book'),)


class Book(models.Model):
    book_id = models.AutoField(primary_key=True)
    isbn13 = models.CharField(max_length=255, blank=True, null=True)
    isbn10 = models.CharField(max_length=255, blank=True, null=True)
    title = models.CharField(max_length=255, blank=True, null=True)
    subtitle = models.CharField(max_length=255, blank=True, null=True)
    thumbnail = models.CharField(max_length=1000, blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    published_year = models.IntegerField(blank=True, null=True)
    average_rating = models.FloatField(blank=True, null=True)
    num_pages = models.IntegerField(blank=True, null=True)
    ratings_count = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'book'


class BookCategory(models.Model):
    category = models.OneToOneField(
        'Category', models.DO_NOTHING, primary_key=True)
    book = models.ForeignKey(Book, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'book_category'
        unique_together = (('category', 'book'),)


class BookLibrary(models.Model):
    library = models.OneToOneField(
        'Library', models.DO_NOTHING, primary_key=True)
    book = models.ForeignKey(Book, models.DO_NOTHING)
    quantity = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'book_library'
        unique_together = (('library', 'book'),)


class Category(models.Model):
    category_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'category'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class Library(models.Model):
    library_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'library'


class Reservations(models.Model):
    reservation_id = models.AutoField(primary_key=True)
    customer = models.ForeignKey(
        User, models.DO_NOTHING, blank=True, null=True)
    # Field name made lowercase.
    orderdate = models.DateField(db_column='OrderDate', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'reservations'


class ReservationsBook(models.Model):
    book = models.OneToOneField(Book, models.DO_NOTHING, primary_key=True)
    reservation = models.ForeignKey(Reservations, models.DO_NOTHING)
    price = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'reservations_book'
        unique_together = (('book', 'reservation'),)
